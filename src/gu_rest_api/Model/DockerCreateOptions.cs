/* 
 * Golem unlimited low level hub API
 *
 * API description in Markdown.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = GURestApi.Client.OpenAPIDateConverter;

namespace GURestApi.Model
{
    /// <summary>
    /// DockerCreateOptions
    /// </summary>
    [DataContract]
    public partial class DockerCreateOptions :  IEquatable<DockerCreateOptions>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DockerCreateOptions" /> class.
        /// </summary>
        /// <param name="volumes">volumes.</param>
        /// <param name="cmd">cmd.</param>
        /// <param name="net">net.</param>
        public DockerCreateOptions(List<VolumeDef> volumes = default(List<VolumeDef>), List<string> cmd = default(List<string>), DockerNetDef net = default(DockerNetDef))
        {
            this.Volumes = volumes;
            this.Cmd = cmd;
            this.Net = net;
        }
        
        /// <summary>
        /// Gets or Sets Volumes
        /// </summary>
        [DataMember(Name="volumes", EmitDefaultValue=false)]
        public List<VolumeDef> Volumes { get; set; }

        /// <summary>
        /// Gets or Sets Cmd
        /// </summary>
        [DataMember(Name="cmd", EmitDefaultValue=false)]
        public List<string> Cmd { get; set; }

        /// <summary>
        /// Gets or Sets Net
        /// </summary>
        [DataMember(Name="net", EmitDefaultValue=false)]
        public DockerNetDef Net { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DockerCreateOptions {\n");
            sb.Append("  Volumes: ").Append(Volumes).Append("\n");
            sb.Append("  Cmd: ").Append(Cmd).Append("\n");
            sb.Append("  Net: ").Append(Net).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DockerCreateOptions);
        }

        /// <summary>
        /// Returns true if DockerCreateOptions instances are equal
        /// </summary>
        /// <param name="input">Instance of DockerCreateOptions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DockerCreateOptions input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Volumes == input.Volumes ||
                    this.Volumes != null &&
                    this.Volumes.SequenceEqual(input.Volumes)
                ) && 
                (
                    this.Cmd == input.Cmd ||
                    this.Cmd != null &&
                    this.Cmd.SequenceEqual(input.Cmd)
                ) && 
                (
                    this.Net == input.Net ||
                    (this.Net != null &&
                    this.Net.Equals(input.Net))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Volumes != null)
                    hashCode = hashCode * 59 + this.Volumes.GetHashCode();
                if (this.Cmd != null)
                    hashCode = hashCode * 59 + this.Cmd.GetHashCode();
                if (this.Net != null)
                    hashCode = hashCode * 59 + this.Net.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
