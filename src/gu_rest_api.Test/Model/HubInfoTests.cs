/* 
 * Golem unlimited low level hub API
 *
 * API description in Markdown.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using GURestApi.Api;
using GURestApi.Model;
using GURestApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace GURestApi.Test
{
    /// <summary>
    ///  Class for testing HubInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class HubInfoTests
    {
        // TODO uncomment below to declare an instance variable for HubInfo
        //private HubInfo instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of HubInfo
            //instance = new HubInfo();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of HubInfo
        /// </summary>
        [Test]
        public void HubInfoInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" HubInfo
            //Assert.IsInstanceOfType<HubInfo> (instance, "variable 'instance' is a HubInfo");
        }


        /// <summary>
        /// Test the property 'NodeId'
        /// </summary>
        [Test]
        public void NodeIdTest()
        {
            // TODO unit test for the property 'NodeId'
        }
        /// <summary>
        /// Test the property 'Version'
        /// </summary>
        [Test]
        public void VersionTest()
        {
            // TODO unit test for the property 'Version'
        }
        /// <summary>
        /// Test the property 'Build'
        /// </summary>
        [Test]
        public void BuildTest()
        {
            // TODO unit test for the property 'Build'
        }
        /// <summary>
        /// Test the property 'Caps'
        /// </summary>
        [Test]
        public void CapsTest()
        {
            // TODO unit test for the property 'Caps'
        }

    }

}
